-provide(:title, @blog.title)
.article-content
	%article{id:"#{@blog.id}"}
		%h1=@blog.title
		%time=updated_time @blog
		%br
		%div
			.escaped-content=sanitize html_view @blog.content
		-unless @blog.tags.blank?
			%tags 
				=render @blog.tags
			%a.likeIt
			%span.like-counts=@blog.like_count
		-if signed_in?
			=link_to 'edit', edit_blog_path(@blog)
	%comment
		=render partial: "comments/comment", locals: {thing: @blog}
	%aside.wide
		=render partial: "admin/author", locals:{type:""}
		%section.padding
			%h3 Latest...
			%ul.latest_articles
				-Blog.recent_blogs.each do |blog|
					%li
						=link_to blog.title, blog_path(blog)
	%nav#article_nav
		-if @blog.has_pre?
			=link_to "Older", blog_path(@blog.pre_blog), class: "pre_blog"
		-if @blog.has_next?
			=link_to 'Newer', blog_path(@blog.next_blog), class: "next_blog"
